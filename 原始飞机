#include<graphics.h>
#include<conio.h>

#define High 750
#define Width 500

//所有物体的坐标均是图片左上角坐标

struct Bullet 
{
	int ballet_x;
	int ballet_y;
	int exist=0;
};
struct Rock
{
	float rock_x;
	float rock_y;
	float rock_vx;
	float rock_vy;
	int exist;
	int attack;
};
struct Enemy
{
	int enemy_x;
	float enemy_y;
	int enemyLife = 20;
	int exist;
};
struct EnemyBullet
{
	int bullet_x;
	int bullet_y;
	int exist = 0;
};
int playWay = 1;
int bossState = 0;
int k = 1;
int level = 1,score=0;
int plane_x, plane_y,isExplode=0;
IMAGE img_bk, img_planeNormal1, img_planeNormal2, img_bullet1,img_bullet2, img_rock1, img_rock2, img_bk2, img_over;
IMAGE img_enemy1, img_enemy2,img_boss1,img_boss2;
IMAGE img_ball1, img_ball2;
IMAGE img_planeEx1, img_planeEx2;
struct Bullet bullet[30];
struct Rock rock[3];
struct Rock rock2[25];
int lan = 0;
struct Enemy enemy[5];
struct EnemyBullet enemyBullet[10];
int rockNumber = 3;
int enemyNumber = 0,littleBossLife=100,bigBossLife=550;
int littleBoss_x, littleBoss_y, bigBoss_x, bigBoss_y, littleBossExist = 0, bigBossExist = 0,boss_vx=1;
int ball_x, ball_y, ball_vx, ball_vy, ballExist;
int dazhao = 0;
void startup()
{
	plane_x = Width / 2;
	plane_y = High - 122;
	int i;
	for (i = 0; i < 30; i++)
		bullet[i].exist = 0;
	for (i = 0; i < 3; i++) {
		rock[i].exist = 0;
	}
	
	loadimage(&img_bk, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\background.jpg"));
	loadimage(&img_planeNormal1, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\planeNormal_1.jpg"));
	loadimage(&img_planeNormal2, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\planeNormal_2.jpg"));
	loadimage(&img_bullet1, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\bullet1.jpg"));
	loadimage(&img_bullet2, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\bullet2.jpg"));
	loadimage(&img_rock1, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\rock_1.jpg"));
	loadimage(&img_rock2, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\rock_2.jpg"));
	loadimage(&img_enemy1, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\plane1.jpg"));
	loadimage(&img_enemy2, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\plane2.jpg"));
	loadimage(&img_boss1, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\enemyPlane1.jpg"));
	loadimage(&img_boss2, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\enemyPlane2.jpg"));
	loadimage(&img_planeEx1, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\planeExplode_1.jpg"));
	loadimage(&img_planeEx2, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\planeExplode_2.jpg"));
	loadimage(&img_ball1, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\ball1.jpg"));
	loadimage(&img_ball2, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\ball2.jpg"));
	loadimage(&img_bk2, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\back.jpg"));
	loadimage(&img_over, _T("E:\\学习记录\\随书资源\\第5章\\5.2 飞机大战\\飞机大战图片音乐素材\\over.jpg"));
	initgraph(Width, High);
	BeginBatchDraw();

	while (1)
	{
		putimage(0, 0, &img_bk2);
		FlushBatchDraw();
		char input;
		MOUSEMSG m;

		if (_kbhit())
		{
			input = _getch();
			if (input == ' ')
			{
				playWay = 0;
				break;
			}
		}
		if (MouseHit())
		{
			m = GetMouseMsg();
			if (m.uMsg == WM_LBUTTONDOWN)
			{
				playWay = 1;
				break;
			}
		}
	}
}
void gameover()
{
	putimage(0, 0, &img_over);
	FlushBatchDraw();
	Sleep(100000);
}
void show()
{
	putimage(0, 0, &img_bk);
	int i;

	if (level == 3) {
		for (i = 0; i < rockNumber; i++) 
		{
			putimage(Width - (i + 1) * 20, High - 25, &img_rock1, NOTSRCERASE);
			putimage(Width - (i + 1) * 20, High - 25, &img_rock2, SRCINVERT);
		}
	}

	if (isExplode == 0)  //飞机还没有爆炸
	{
		putimage(plane_x, plane_y, &img_planeNormal1, NOTSRCERASE);
		putimage(plane_x, plane_y, &img_planeNormal2, SRCINVERT);
		for (i = 0; i < 30; i++) 
		{
			if (bullet[i].exist == 1)  //子弹存在
			{
				putimage(bullet[i].ballet_x, bullet[i].ballet_y, &img_bullet1, NOTSRCERASE);
				putimage(bullet[i].ballet_x, bullet[i].ballet_y, &img_bullet2, SRCINVERT);
			}
		}
		for (i = 0; i < 3; i++) 
		{
			if (rock[i].exist == 1)
			{
				putimage(rock[i].rock_x, rock[i].rock_y, &img_rock1, NOTSRCERASE);
				putimage(rock[i].rock_x, rock[i].rock_y, &img_rock2, SRCINVERT);
			}
		}
		//显示普通敌机飞行
		for (i = 0; i < 5; i++) {
			if (enemy[i].exist == 1)
			{
				putimage(enemy[i].enemy_x, enemy[i].enemy_y, &img_enemy1, NOTSRCERASE);
				putimage(enemy[i].enemy_x, enemy[i].enemy_y, &img_enemy2, SRCINVERT);
			}
		}
		//显示小boss
		if (littleBossExist == 1)
		{
			putimage(littleBoss_x, littleBoss_y, &img_boss1, NOTSRCERASE);
			putimage(littleBoss_x, littleBoss_y, &img_boss2, SRCINVERT);

			//显示小BOSS血条
			setcolor(YELLOW);
			setfillcolor(RED);
			fillrectangle(0, 0, littleBossLife, 5);

			//显示小boss子弹
			for (int i = 0; i < 10; i++)
			{
				if (enemyBullet[i].exist == 1)
				{
					putimage(enemyBullet[i].bullet_x, enemyBullet[i].bullet_y, &img_bullet1, NOTSRCERASE);
					putimage(enemyBullet[i].bullet_x, enemyBullet[i].bullet_y, &img_bullet2, SRCINVERT);
				}
			}
		}
		if (bigBossExist == 1) {
			putimage(bigBoss_x, bigBoss_y, &img_boss1, NOTSRCERASE);
			putimage(bigBoss_x, bigBoss_y, &img_boss2, SRCINVERT);

			setcolor(RED);
			setfillcolor(GREEN);
			fillrectangle(0, 0, bigBossLife/2, 8);

			for (int i = 0; i < 10; i++)
			{
				if (enemyBullet[i].exist == 1)
				{
					putimage(enemyBullet[i].bullet_x, enemyBullet[i].bullet_y, &img_bullet1, NOTSRCERASE);
					putimage(enemyBullet[i].bullet_x, enemyBullet[i].bullet_y, &img_bullet2, SRCINVERT);
				}
			}
			putimage(ball_x, ball_y, &img_ball1, NOTSRCERASE);
			putimage(ball_x, ball_y, &img_ball2, SRCINVERT);
		}
		if (lan < 100)
		{
			setcolor(YELLOW);
			setfillcolor(BLUE);
			fillrectangle(0,High-10,lan*2,High);
		}
		else {
			setcolor(YELLOW);
			setfillcolor(RED);
			fillrectangle(0, High - 10, lan*2, High);
		}
		if (dazhao == 1)
		{
			for (int j = 0; j < 25; j++)
			{
				putimage(rock2[j].rock_x, rock2[j].rock_y, &img_rock1, NOTSRCERASE);
				putimage(rock2[j].rock_x, rock2[j].rock_y, &img_rock2, SRCINVERT);
			}
		}
	}
	else {
		putimage(plane_x, plane_y, &img_planeEx1, NOTSRCERASE);
		putimage(plane_x, plane_y, &img_planeEx2, SRCINVERT);
	}
	
	FlushBatchDraw();
	Sleep(1);
}
void updateWithoutInput()
{
	for (int i = 0; i < 30; i++) 
	{
		if (bullet[i].ballet_y > -25 && bullet[i].exist == 1)
		{
			bullet[i].ballet_y -= 2;
			if (bossState == 0)
			{
				for (int j = 0; j < 5; j++) //判断子弹会不会打中敌机
				{
					if (enemy[j].exist == 1)
					{
						if (bullet[i].ballet_y >= enemy[j].enemy_y + 30 && bullet[i].ballet_y <= enemy[j].enemy_y + 75 &&
							bullet[i].ballet_x + 10 <= enemy[j].enemy_x + 59 && bullet[i].ballet_x + 10 >= enemy[j].enemy_x)
						{
							enemy[j].enemyLife -= 7;
							bullet[i].exist = 0;
							if (enemy[j].enemyLife <= 0)
							{
								enemy[j].exist = 0;
								enemyNumber--;
								score++;
							}
							break;
						}
					}
				}
			}
			//判断会不会打中小boss
			if (bossState == 1)
			{
				if (bullet[i].ballet_y <= littleBoss_y + 145 && bullet[i].ballet_x + 10 >= littleBoss_x && bullet[i].ballet_x + 10 <= littleBoss_x + 104)
				{
					bullet[i].exist = 0;
					littleBossLife -= 1;
					if (littleBossLife <= 0)
					{
						littleBossExist = 0;
						bossState = 0;
						score += 10;
						for (int j = 0; j < 10; j++)
						{
							enemyBullet[j].exist = 0;
						}
					}
				}
				//判断会不会打到小boss的子弹
				for (int j = 0; j < 10; j++)
				{
					if (enemyBullet[j].exist == 1 && bullet[i].exist == 1)
					{
						if (bullet[i].ballet_y <= enemyBullet[j].bullet_y + 24 && bullet[i].ballet_x <= enemyBullet[j].bullet_x + 19 &&
							bullet[i].ballet_x > enemyBullet[j].bullet_x - 19)
						{
							bullet[i].exist = 0;
							enemyBullet[j].exist = 0;
						}
					}
				}
			}
			else if (bossState == 2)
			{
				if (bullet[i].ballet_y <= bigBoss_y + 145 && bullet[i].ballet_x + 10 >= bigBoss_x && bullet[i].ballet_x + 10 <= bigBoss_x + 104)
				{
					bullet[i].exist = 0;
					bigBossLife -= 1;
					if (bigBossLife <= 0)
					{
						bigBossExist = 0;
						bossState = 0;
						score += 10;
						for (int j = 0; j < 10; j++)
						{
							enemyBullet[j].exist = 0;
						}
						//
						gameover();
					}
				}
			}
		}
		else {
			bullet[i].exist = 0;
		}
	}
	//更新火箭的数据并判断火箭击中
	if (level == 3) 
	{
		for (int i = 0; i < 3; i++)
		{
			if (rock[i].exist == 1)
			{
				if (rock[i].rock_vy > -100) {
					rock[i].rock_vy -= 0.02;
					rock[i].rock_y += rock[i].rock_vy;
				}
				if (bossState == 0)
				{
					for (int j = 0; j < 10; j++)
					{
						if (enemy[j].exist == 1)
						{
							if (rock[i].rock_y <= enemy[j].enemy_y + 75 && rock[i].rock_x + 10 <= enemy[j].enemy_x + 59 && 
								rock[i].rock_x + 10 > enemy[j].enemy_x&&rock[i].rock_y>=enemy[i].enemy_y)
							{
								enemy[j].enemyLife -= 30;
								enemy[j].exist = 0;
								enemyNumber--;
								score++;
								break;
							}
						}
					}
				}
				if (bossState == 1) //判断火箭是否击中小BOSS
				{
					if (rock[i].attack == 0 && rock[i].rock_y <= littleBoss_y + 148 && rock[i].rock_x > littleBoss_x &&
						rock[i].rock_x < littleBoss_x + 104 && rock[i].rock_y >= littleBoss_y)
					{
						littleBossLife -= 30;
						rock[i].attack = 1;
						if (littleBossLife <= 0)
						{
							littleBossExist = 0;
							bossState = 0;
							score += 10;
							for (int j = 0; j < 10; j++)
							{
								enemyBullet[j].exist = 0;
							}
						}
					}
				}
				if (bossState == 2)
				{
					if (rock[i].attack == 0 && rock[i].rock_y <= bigBoss_y + 148 && rock[i].rock_x > bigBoss_x &&
						rock[i].rock_x < bigBoss_x + 104 && rock[i].rock_y >= bigBoss_y)
					{
						bigBossLife -= 40;
						rock[i].attack = 1;
						if (bigBossLife <= 0)
						{
							bigBossExist = 0;
							bossState = 0;
							score += 10;
							for (int j = 0; j < 10; j++)
							{
								enemyBullet[j].exist = 0;
							}
							//
							gameover();
						}
					}
				}
			}
		}
	}
	static int rockUpdateSpeed = 0;

	if (rockNumber < 3) 
	{
		if (rockUpdateSpeed < 800)
			rockUpdateSpeed++;
		else {
			for (int i = 0; i < 3; i++)
			{
				if (rock[i].exist==1&&rock[i].rock_y < 0) {
					rock[i].exist = 0;
					rockUpdateSpeed = 0;
					rockNumber++;
					break;
				}
			}
		}
	}
	
	//初始化敌机
	
	if (bossState == 0)
	{
		static int enemySpeed = 0;
		if (enemySpeed < 200)
			enemySpeed++;
		//开始生成敌机
		if (enemySpeed == 200)
		{
			enemySpeed = 0;
			if (enemyNumber < 5)
			{
				for (int i = 0; i < 5; i++)
				{
					if (enemy[i].exist == 0)
					{
						enemy[i].exist = 1;
						enemy[i].enemy_x = rand() % 420;
						enemy[i].enemy_y = -80.0;
						enemy[i].enemyLife = 20;
						enemyNumber++;
						break;
					}
				}
			}
		}
		for (int i=0; i < 5; i++)
		{
			if (enemy[i].exist == 1)
			{
				enemy[i].enemy_y += 0.3;
				if (enemy[i].enemy_y > High)
				{
					enemy[i].exist = 0;
					enemyNumber--;
				}
			}
		}
	}
	else if (bossState == 1)//进入小boss状态
	{
		//初始化小boss数据
		if (littleBossExist == 0) {
			littleBossExist = 1;
			littleBoss_x = 3;
			littleBoss_y = 3;
			boss_vx = 1;
			
		}
		static int bulletFire = 0;
		static int bulletSpeed = 0;
		static int littleBossSpeed = 0;
		if (bulletFire < 600)
			bulletFire++;
		if (littleBossSpeed < 2)
			littleBossSpeed++;
		if (bulletSpeed < 4)
			bulletSpeed++;
		if (littleBossSpeed == 2) //设置小boss移动
		{
			littleBoss_x += boss_vx;
			littleBossSpeed = 0;
			if (littleBoss_x > Width-104)
			{
				boss_vx = -boss_vx;
			}
			else if (littleBoss_x <= 0)
			{
				boss_vx = -boss_vx;
			}
		}
		
		if (bulletFire == 400)
		{
			bulletFire = 0;
			//开始产生子弹
			for (int i = 0; i < 10; i++)
			{
				if (enemyBullet[i].exist == 0)
				{
					enemyBullet[i].exist = 1;
					enemyBullet[i].bullet_x = littleBoss_x + 20;
					enemyBullet[i].bullet_y = littleBoss_y + 148;
					break;
				}
			}
			for (int i = 0; i < 10; i++)
			{
				if (enemyBullet[i].exist == 0)
				{
					enemyBullet[i].exist = 1;
					enemyBullet[i].bullet_x = littleBoss_x + 80;
					enemyBullet[i].bullet_y = littleBoss_y + 148;
					break;
				}
			}
		}
		if (bulletSpeed == 2)
		{
			bulletSpeed = 0;
			for (int i = 0; i < 10; i++)
			{
				//小boss子弹开始移动
				if (enemyBullet[i].exist == 1)
				{
					enemyBullet[i].bullet_y +=2;

					if (enemyBullet[i].bullet_y >= High)
					{
						enemyBullet[i].exist = 0;
					}
					//判断双方子弹是否相撞
					for (int j = 0; j < 30; j++)
					{
						if (bullet[j].exist == 1)
						{
							if (bullet[j].ballet_y <= enemyBullet[i].bullet_y + 24 && bullet[j].ballet_x <= enemyBullet[i].bullet_x + 19 && 
								bullet[j].ballet_x > enemyBullet[i].bullet_x-19)
							{
								bullet[j].exist = 0;
								enemyBullet[i].exist = 0;
							}
						}
					}
					//判断子弹是否撞到飞机
					if (enemyBullet[i].exist == 1)
					{
						if (enemyBullet[i].bullet_x < plane_x + 120 && enemyBullet[i].bullet_x > plane_x && 
							enemyBullet[i].bullet_y >= plane_y + 50 && enemyBullet[i].bullet_y<=plane_y+90)
						{
							isExplode = 1;
						}
					}
				}
				
			}
		}
	}
	else if (bossState == 2)
	{
		//初始化大boss
		if (bigBossExist == 0)
		{
			bigBossExist = 1;
			bigBoss_x = 3;
			bigBoss_y = 5;
			boss_vx = 3;
		}
		static int bigBossSpeed1 = 0;
		static int bigFire1 = 0;
		static int bigSpeed1 = 0;
		static int bigSpeed2 = 0;
		if (bigBossSpeed1 < 4)
			bigBossSpeed1++;
		if (bigFire1 <= 400) {
			bigFire1++;
		}
		if (bigSpeed1 < 2)
			bigSpeed1++;
		if (bigSpeed2 < 1) {
			bigSpeed2++;
		}
		if (bigBossSpeed1 == 4)
		{
			bigBossSpeed1 = 0;
			bigBoss_x += boss_vx;
			if (bigBoss_x >= Width - 104)
			{
				boss_vx = -boss_vx;
			}
			else if (bigBoss_x <= 0)
			{
				boss_vx = -boss_vx;
			}
		}
		if (bigFire1 == 300)
		{
			bigFire1 = 0;
			for (int i = 0; i < 10; i++)
			{
				if (enemyBullet[i].exist == 0)
				{
					enemyBullet[i].exist = 1;
					enemyBullet[i].bullet_x = bigBoss_x + 20;
					enemyBullet[i].bullet_y = bigBoss_y + 148;
					break;
				}
			}
			for (int i = 0; i < 10; i++)
			{
				if (enemyBullet[i].exist == 0)
				{
					enemyBullet[i].exist = 1;
					enemyBullet[i].bullet_x = bigBoss_x + 80;
					enemyBullet[i].bullet_y = bigBoss_y + 148;
					break;
				}
			}
		}
		if (bigSpeed1 == 2)
		{
			bigSpeed1 = 0;
			for (int i = 0; i < 10; i++)
			{
				//小boss子弹开始移动
				if (enemyBullet[i].exist == 1)
				{
					enemyBullet[i].bullet_y += 2;

					if (enemyBullet[i].bullet_y >= High)
					{
						enemyBullet[i].exist = 0;
					}
					//判断双方子弹是否相撞
					for (int j = 0; j < 30; j++)
					{
						if (bullet[j].exist == 1)
						{
							if (bullet[j].ballet_y <= enemyBullet[i].bullet_y + 24 && bullet[j].ballet_x <= enemyBullet[i].bullet_x + 19 &&
								bullet[j].ballet_x > enemyBullet[i].bullet_x - 19)
							{
								bullet[j].exist = 0;
								enemyBullet[i].exist = 0;
							}
						}
					}
					//判断子弹是否撞到飞机
					if (enemyBullet[i].exist == 1)
					{
						if (enemyBullet[i].bullet_x < plane_x + 120 && enemyBullet[i].bullet_x > plane_x &&
							enemyBullet[i].bullet_y >= plane_y + 50 && enemyBullet[i].bullet_y <= plane_y + 90)
						{
							isExplode = 1;
						}
					}
				}

			}
		}
		
		if (bigSpeed2 == 1)
		{
			if (ballExist == 0)
			{
				ball_x = bigBoss_x + 52;
				ball_y = bigBoss_y + 150;
				ballExist = 1;
				ball_vy = 1;
				if (rand() % 2 == 0)
				{
					ball_vx = -1;
				}
				else
				{
					ball_vx = 1;
				}
			}
			ball_x += ball_vx;
			ball_y += ball_vy;
			if (ball_x == 0 || ball_x == Width)
				ball_vx = -ball_vx;

			if (ball_y > High + 10)
				ballExist = 0;

			if (ballExist == 1)
			{
				if (ball_x + 10 < plane_x + 117 && ball_x + 10 > plane_x && ball_y > plane_y + 30 && ball_y < plane_y + 90)
				{
					isExplode = 1;
				}
			}
		}
	}
	if (dazhao == 1)
	{
		for (int i = 0; i < 25; i++)
		{
			rock2[i].rock_y -= 1;
			if (rock2[i].rock_y <= -40)//此时大招 出去
			{
				dazhao = 0;
			}
		}

		//判断大招与普通飞机相撞
		for (int i = 0; i < 5; i++)
		{
			if (enemy[i].exist == 1)
			{
				if (rock2[1].rock_y <= enemy[i].enemy_y + 60)
				{
					enemy[i].exist = 0;
					enemyNumber--;
				}
			}
		}
		//判断大招与小boss相撞
		if (bossState == 1)
		{
			if (rock2[1].attack == 0 && rock2[1].rock_y < littleBoss_y + 148)
			{
				littleBossLife -= 50;
				for (int i = 0; i < 25; i++)
				{
					rock2[i].attack = 1;
				}
				if (littleBossLife <= 0)
				{
					littleBossExist = 0;
					bossState = 0;
					score += 10;
					for (int j = 0; j < 10; j++)
					{
						enemyBullet[j].exist = 0;
					}
				}
			}
		}
		if (bossState == 2)
		{
			if (rock2[1].attack == 0 && rock2[1].rock_y <= bigBoss_y + 148)
			{
				bigBossLife -= 100;
				for (int i = 0; i < 25; i++)
				{
					rock2[i].attack = 1;
				}
				if (bigBossLife <= 0)
				{
					bigBossExist = 0;
					bossState = 0;
					score += 10;
					for (int j = 0; j < 10; j++)
					{
						enemyBullet[j].exist = 0;
					}
					//
					gameover();
				}
			}
		}
	}
	if (level >= 2 && dazhao==0) {
		static int lanSpeed=0;
		if (lanSpeed < 100)
			lanSpeed++;
		if (lanSpeed == 100)
		{
			lanSpeed = 0;
			if (lan <= 100) {
				lan += 2;
			}
		}
	}
	if (score >= 20)
		level = 2;
	if (score >= 25&&score<=30)
	{
		for (int i=0; i < 5; i++)
		{
			enemy[i].exist = 0;
			enemyNumber = 0;
		}
		bossState = 1;
		if (littleBossExist == 0)
		{
			littleBossLife = 100;
		}
	}
	if (score >= 45)
		level = 3;
	if (score == 55)
	{
		for (int i = 0; i < 5; i++)
		{
			enemy[i].exist = 0;
			enemyNumber = 0;
		}
		bossState = 1;
		if (littleBossExist == 0)
		{
			littleBossLife = 300;
		}
	}
	if (score >= 100)
	{
		for (int i = 0; i < 5; i++)
		{
			enemy[i].exist = 0;
		}

		bossState = 2;
	}
	
}
void updateWithInput()
{
	if (playWay == 0)
	{
		char input;
		if (_kbhit())
		{
			input = _getch();
			if (input == 'a' && plane_x > 0)
			{
				plane_x -= 20;
			}
			else if (input == 'd' && plane_x + 117 < Width)
			{
				plane_x += 20;
			}
			else if (input == 'w' && plane_y >= High / 2)
			{
				plane_y -= 20;
			}
			else if (input == 's' && plane_y <= High-120)
			{
				plane_y += 20;
			}

			if (input == ' ') 
			{
				if (level == 1) 
				{
					for (int i = 0; i < 30; i++)
					{
						if (bullet[i].exist == 0) {
							bullet[i].exist = 1;
							bullet[i].ballet_x = plane_x + 42;
							bullet[i].ballet_y = plane_y - 25;
							break;
						}
					}
				}
				else if (level == 2)
				{
					for (int i = 0; i < 30; i++)
					{
						if (bullet[i].exist == 0) {
							bullet[i].exist = 1;
							bullet[i].ballet_x = plane_x + 10;
							bullet[i].ballet_y = plane_y + 10;
							break;
						}
					}
					for (int i = 0; i < 30; i++)
					{
						if (bullet[i].exist == 0) {
							bullet[i].exist = 1;
							bullet[i].ballet_x = plane_x + 72;
							bullet[i].ballet_y = plane_y + 10;
							break;
						}
					}
				}
				else if (level == 3) 
				{
					for (int i = 0; i < 30; i++)
					{
						if (bullet[i].exist == 0) {
							bullet[i].exist = 1;
							bullet[i].ballet_x = plane_x + 10;
							bullet[i].ballet_y = plane_y + 10;
							break;
						}
					}
					for (int i = 0; i < 30; i++)
					{
						if (bullet[i].exist == 0) {
							bullet[i].exist = 1;
							bullet[i].ballet_x = plane_x + 72;
							bullet[i].ballet_y = plane_y + 10;
							break;
						}
					}
					
				}
			}
			if (input == 'r' && level == 3 && rockNumber > 0)
			{
				//开始判定生成火箭
				for (int i = 0; i < 3; i++)
				{
					
					if (rock[i].exist == 0) 
					{
						rock[i].exist = 1;
						rock[i].rock_x = plane_x + 42;
						rock[i].rock_y = plane_y - 25;
						rock[i].rock_vx = 0;
						rock[i].attack = 0;
						rock[i].rock_vy = 0;
						break;
					}
					
				}
				rockNumber--;
			}
		}
	}
	else if (playWay == 1) 
	{
		MOUSEMSG m;
		if (MouseHit())
		{
			m = GetMouseMsg();
			if (m.uMsg == WM_MOUSEMOVE)
			{
				plane_x = m.x - 50;
				plane_y = m.y - 60;
			}
			if (level == 1)
			{
				if (m.uMsg == WM_LBUTTONDOWN)
				{
					for (int i = 0; i < 30; i++)
					{
						if (bullet[i].exist == 0) {
							bullet[i].exist = 1;
							bullet[i].ballet_x = plane_x + 42;
							bullet[i].ballet_y = plane_y - 25;
							break;
						}
					}
				}
			}
			else if (level == 2)
			{
				if (m.uMsg == WM_LBUTTONDOWN)
				{
					for (int i = 0; i < 30; i++)
					{
						if (bullet[i].exist == 0) {
							bullet[i].exist = 1;
							bullet[i].ballet_x = plane_x + 10;
							bullet[i].ballet_y = plane_y + 10;
							break;
						}
					}
					for (int i = 0; i < 30; i++)
					{
						if (bullet[i].exist == 0) {
							bullet[i].exist = 1;
							bullet[i].ballet_x = plane_x + 72;
							bullet[i].ballet_y = plane_y + 10;
							break;
						}
					}
				}
			}
			else if (level == 3)
			{
				
				 if (m.uMsg == WM_LBUTTONDOWN)
				{
					for (int i = 0; i < 30; i++)
					{
						if (bullet[i].exist == 0) {
							bullet[i].exist = 1;
							bullet[i].ballet_x = plane_x + 10;
							bullet[i].ballet_y = plane_y + 10;
							break;
						}
					}
					for (int i = 0; i < 30; i++)
					{
						if (bullet[i].exist == 0) {
							bullet[i].exist = 1;
							bullet[i].ballet_x = plane_x + 72;
							bullet[i].ballet_y = plane_y + 10;
							break;
						}
					}
				}
				else if (m.uMsg == WM_RBUTTONDOWN)
				{
					for (int i = 0; i < 3; i++)
					{

						if (rock[i].exist == 0)
						{
							rock[i].exist = 1;
							rock[i].rock_x = plane_x + 42;
							rock[i].rock_y = plane_y - 25;
							rock[i].rock_vx = 0;
							rock[i].attack = 0;
							rock[i].rock_vy = 0;
							rockNumber--;
							break;
						}
					}
					
				}
				
			}
		}
		if (_kbhit())
		{
			char input = _getch();
			if (input == 'x' && lan >= 100)
			{
				for (int i = 0; i < 25; i++)
				{
					rock2[i].exist = 1;
					rock2[i].attack = 0;
					rock2[i].rock_x = (i + 1) * 20 ;
					rock2[i].rock_y = High + 30;
					rock2[i].rock_vy = 0;
					dazhao = 1;
					lan = 0;
				}
			}
		}
	}
}
int main()
{
	startup();
	while (1)
	{
		show();
		updateWithoutInput();
		updateWithInput();
	}
}
